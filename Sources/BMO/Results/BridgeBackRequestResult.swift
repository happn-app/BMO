/*
Copyright 2019 happn

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. */

import Foundation



public struct BridgeBackRequestResult<BridgeType : Bridge> {
	
	/** The metadata for the imported root objects.
	
	These are relationship metadata, or if result is root, root metadata. There
	are no object or attribute metadata: if you need those, keep them in your
	model, potentially in transient properties. */
	public let metadata: BridgeType.MetadataType?
	
	/** The ids of the (root) objects that were retrieved from the async
	operation, in the order they were retrieved.
	
	Some importers might decide to drop the relationships part of the result for
	performance reasons (hence the optionality of the relationships part of the
	tuple). */
	public let returnedObjectIDsAndRelationships: [(objectID: BridgeType.DbType.ObjectIDType, relationships: [String: BridgeBackRequestResult<BridgeType>]?)]
	
	/** Contains the changes reported by the db fast import method. Most of the
	time will only contain modifications generated by the method, not the
	implicit modifications (eg. when a relationship value is replaced, all
	objects previously in the relationship are usually modified because the
	reverse relationship will be set to nil).
	
	Some importers might decide to drop this result for performance reasons,
	hence the optionality. */
	public let asyncChanges: ChangesDescription<BridgeType.DbType.ObjectIDType>?
	
	public init(metadata m: BridgeType.MetadataType?, returnedObjectIDsAndRelationships r: [(objectID: BridgeType.DbType.ObjectIDType, relationships: [String: BridgeBackRequestResult<BridgeType>]?)], asyncChanges c: ChangesDescription<BridgeType.DbType.ObjectIDType>?) {
		metadata = m
		returnedObjectIDsAndRelationships = r
		asyncChanges = c
	}
	
}
